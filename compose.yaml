services:
  web:
    container_name: blog_web
    build:
      context: .
      dockerfile: ./compose/dev/Dockerfile
    networks:
      - backend
    volumes:
      - .:/app
    ports:
      - 8000:5000
    env_file:
      - .env
    environment:
      - FLASK_DEBUG=1
    # tty: true
    command:
      [
        "gunicorn",
        "--config",
        "./src/config/gunicorn.py",
        "start:app"
      ]
    # command: bash -c "flask --app start:app run --host 0.0.0.0"
    init: true
    depends_on:
      - db
      - redis
    restart: always
  db:
    image: mysql:8.0.31
    ports:
      - 3306:3306
    networks:
      - backend
    privileged: true
    volumes:
      - mysql_data:/var/lib/mysql
      # - ./compose/dev/mysql/initdb.d:/docker-entrypoint-initdb.d
      - ./compose/dev/mysql/config:/etc/mysql/conf.d
    env_file:
      - .env
    restart: always
  redis:
    build: ./compose/dev/redis/master/
    # sysctls:
    #   - vm.overcommit_memory = 1
    # image: redis:7-alpine
    ports:
      - 6379:6379
    networks:
      - backend
    volumes:
      - ./compose/dev/redis/master/redis.conf:/redis.conf
    env_file:
      - .env
    restart: always
    command:
      [
        "--requirepass",
        "${REDIS_PASSWORD}",
        "--masterauth",
        "${REDIS_PASSWORD}"
      ]
  redis_1:
    build: ./compose/dev/redis/master/
    # sysctls:
    #   - vm.overcommit_memory = 1
    ports:
      - 6380:6380
    networks:
      - backend
    volumes:
      - ./compose/dev/redis/replica/redis.conf:/redis.conf
    env_file:
      - .env
    restart: always
    depends_on:
      - redis
    command:
      [
        "--requirepass",
        "${REDIS_PASSWORD}",
        "--masterauth",
        "${REDIS_PASSWORD}"
      ]
  redis_2:
    build: ./compose/dev/redis/master/
    # sysctls:
    #   - vm.overcommit_memory = 1
    ports:
      - 6381:6380
    networks:
      - backend
    volumes:
      - ./compose/dev/redis/replica/redis.conf:/redis.conf
    env_file:
      - .env
    restart: always
    depends_on:
      - redis
    command:
      [
        "--requirepass",
        "${REDIS_PASSWORD}",
        "--masterauth",
        "${REDIS_PASSWORD}"
      ]
  sentinel_1:
    build: ./compose/dev/redis/sentinel/
    ports:
      - 26379:26379
    networks:
      - backend
    volumes:
      - ./compose/dev/redis/sentinel/sentinel_1.conf:/sentinel.conf
    env_file:
      - .env
    restart: always
    depends_on:
      - redis
      - redis_1
      - redis_2
    command:
      [
        "--sentinel",
        "auth-pass",
        "redis",
        "${REDIS_PASSWORD}"
      ]
  sentinel_2:
    build: ./compose/dev/redis/sentinel/
    ports:
      - 26380:26380
    networks:
      - backend
    volumes:
      - ./compose/dev/redis/sentinel/sentinel_2.conf:/sentinel.conf
    env_file:
      - .env
    restart: always
    depends_on:
      - redis
      - redis_1
      - redis_2
    command:
      [
        "--sentinel",
        "auth-pass",
        "redis",
        "${REDIS_PASSWORD}"
      ]
  sentinel_3:
    build: ./compose/dev/redis/sentinel/
    ports:
      - 26381:26381
    networks:
      - backend
    volumes:
      - ./compose/dev/redis/sentinel/sentinel_3.conf:/sentinel.conf
    env_file:
      - .env
    restart: always
    depends_on:
      - redis
      - redis_1
      - redis_2
    command:
      [
        "--sentinel",
        "auth-pass",
        "redis",
        "${REDIS_PASSWORD}"
      ]
networks:
  backend:


volumes:
  mysql_data:
